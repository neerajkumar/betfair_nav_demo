{
  "name": "browser-run",
  "description": "Transform stream that executes JavaScript it receives in a real browser and outputs console output",
  "version": "0.4.0",
  "repository": {
    "type": "git",
    "url": "git://github.com/juliangruber/browser-run.git"
  },
  "homepage": "https://github.com/juliangruber/browser-run",
  "main": "index.js",
  "bin": {
    "browser-run": "./bin/bin.js"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "dependencies": {
    "browser-launcher": "~0.3.4",
    "browserify": "~5.9.3",
    "duplexer": "0.0.3",
    "enstore": "~0.0.1",
    "optimist": "~0.3.5",
    "through": "~2.2.7",
    "utf8-stream": "0.0.0",
    "xhr-write-stream": "~0.1.2"
  },
  "devDependencies": {
    "tap": "*"
  },
  "keywords": [
    "browser",
    "stream",
    "phantomjs",
    "test",
    "headless",
    "duplex"
  ],
  "author": {
    "name": "Julian Gruber",
    "email": "mail@juliangruber.com",
    "url": "http://juliangruber.com"
  },
  "license": "MIT",
  "readme": "# browser-run\n\nThe easiest way of running code in a browser environment.\n\n## Usage\n\n```bash\n$ echo \"console.log('Hey there from ' + document.location)\" | browser-run\nHey there from http://localhost:53227/\n```\n\nOr use `browser-run` programmatically:\n\n```js\nvar run = require('browser-run');\n\nvar browser = run();\nbrowser.pipe(process.stdout);\nbrowser.write('console.log(document.location)');\nbrowser.end();\n```\n\n## Example with browserify\n\n```bash\n$ browserify main.js | browser-run\n```\n\nor\n\n```js\nvar browserify = require('browserify');\nvar browser = require('browser-run');\n\nbrowserify('main.js').bundle().pipe(browser()).pipe(process.stdout);\n```\n\n## CLI\n\n```bash\n$ browser-run --help\nRun JavaScript in a browser.\nWrite code to stdin and receive console output on stdout.\nUsage: browser-run [OPTIONS]\n\nOptions:\n  --browser, -b  Browser to use. Available if installed: chrome, firefox, ie, phantom, safari  [default: \"phantom\"]\n  --port, -p     Starts listening on that port and waits for you to open a browser\n  --help, -h     Print help\n\n```\n\n## API\n\n### run([opts])\n\nReturns a duplex stream and starts a webserver.\n\n`opts` can be:\n\n* `port`: If speficied, no browser will be started, so you can point one yourself to `http://localhost/<port>`\n* `browser`: Browser to use. Defaults to `phantom`. Available if installed:\n  * `chrome`\n  * `firefox`\n  * `ie`\n  * `phantom`\n  * `safari`\n\n### run#stop()\n\nStop the underlying webserver.\n\n## Installation\n\nWith [npm](http://npmjs.org) do\n\n```bash\n$ npm install browser-run    # for library\n$ npm install -g browser-run # for cli\n```\n\n## License\n\n(MIT)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/juliangruber/browser-run/issues"
  },
  "_id": "browser-run@0.4.0",
  "_from": "browser-run@~0.4.0"
}
